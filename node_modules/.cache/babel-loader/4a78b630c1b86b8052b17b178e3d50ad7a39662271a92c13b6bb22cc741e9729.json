{"ast":null,"code":"var _jsxFileName = \"D:\\\\js projects\\\\Portfolio\\\\React Portfolio\\\\LandingPageReact\\\\mastermind\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './styles.css';\nimport { useState, useEffect } from 'react';\nimport generateCode from './GenerateCode.js';\nimport codeTest from './CodeTest.js';\nimport OutcomeModal from './GameResultsModal';\nimport RoundOutput from './RoundOutput.js';\nimport DragAndDropHandler from './DragDropHandler';\nimport GameControls from './GameControls';\nimport circleWhite from './assets/circle-white.png';\nimport circleBlack from './assets/circle-black.png';\nimport circleBlue from './assets/circle-blue.png';\nimport circleRed from './assets/circle-red.png';\nimport circleYellow from './assets/circle-yellow.png';\nimport circleOrange from './assets/circle-orange.png';\nimport circleGreen from './assets/circle-green.png';\nimport circleViolet from './assets/circle-violet.png';\nimport circleGrey from './assets/circle-grey.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [testResult, setTestResult] = useState(Array(12).fill([\"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\"]));\n  const [dragInputCircleOne, setDragInputCircleOne] = useState({\n    color: circleGrey,\n    value: ''\n  });\n  const [dragInputCircleTwo, setDragInputCircleTwo] = useState({\n    color: circleGrey,\n    value: ''\n  });\n  const [dragInputCircleThree, setDragInputCircleThree] = useState({\n    color: circleGrey,\n    value: ''\n  });\n  const [dragInputCircleFour, setDragInputCircleFour] = useState({\n    color: circleGrey,\n    value: ''\n  });\n  const [turnCount, setTurnCount] = useState(0);\n  const [gameStatus, setGameStatus] = useState('');\n  const [secretCode, setSecretCode] = useState([]);\n  const {\n    onDragStart,\n    onDragOver,\n    onDrop\n  } = DragAndDropHandler({\n    setDragInputCircleOne,\n    setDragInputCircleTwo,\n    setDragInputCircleThree,\n    setDragInputCircleFour\n  });\n\n  //creates the code to break\n  useEffect(() => {\n    setSecretCode(generateCode());\n    ;\n  }, []);\n  console.log(secretCode);\n\n  //runs the test logic\n  const runCodeTest = () => {\n    //codeTest is the logic module that determines if the user got it right\n    const result = codeTest([dragInputCircleOne['value'], dragInputCircleTwo['value'], dragInputCircleThree['value'], dragInputCircleFour['value']], secretCode);\n    const updateArray = (index, newArray) => {\n      setTestResult(prevState => {\n        const newState = [...prevState];\n        newState[index] = newArray;\n        return newState;\n      });\n    };\n    if (result.slice(4).every(el => el === 'H') === true) {\n      // win show modal\n      setGameStatus('Win');\n    }\n    updateArray(turnCount, result);\n\n    //console.log(turnCount)\n    setTurnCount(Num => Num + 1);\n    if (turnCount > 12) return setGameStatus('Lose');\n  };\n  const colorMap = {\n    'WHT': circleWhite,\n    'BLK': circleBlack,\n    'BLU': circleBlue,\n    'RED': circleRed,\n    'YLW': circleYellow,\n    'ORG': circleOrange,\n    'GRN': circleGreen,\n    'VLT': circleViolet,\n    'GRY': circleGrey,\n    'H': circleBlack,\n    'M': circleWhite,\n    'F': circleGrey\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mastermind-logo\",\n        children: \"MASTERMIND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutcomeModal, {\n      gameStatus: gameStatus,\n      turns: turnCount,\n      setTurnCount: setTurnCount,\n      setGameStatus: setGameStatus,\n      setTestResult: setTestResult,\n      setDragInputCircleOne: setDragInputCircleOne,\n      setDragInputCircleTwo: setDragInputCircleTwo,\n      setDragInputCircleThree: setDragInputCircleThree,\n      setDragInputCircleFour: setDragInputCircleFour,\n      setSecretCode: setSecretCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jnqfTkAPGBsKmaMZPyxBgpWAYI4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","generateCode","codeTest","OutcomeModal","RoundOutput","DragAndDropHandler","GameControls","circleWhite","circleBlack","circleBlue","circleRed","circleYellow","circleOrange","circleGreen","circleViolet","circleGrey","jsxDEV","_jsxDEV","App","_s","testResult","setTestResult","Array","fill","dragInputCircleOne","setDragInputCircleOne","color","value","dragInputCircleTwo","setDragInputCircleTwo","dragInputCircleThree","setDragInputCircleThree","dragInputCircleFour","setDragInputCircleFour","turnCount","setTurnCount","gameStatus","setGameStatus","secretCode","setSecretCode","onDragStart","onDragOver","onDrop","console","log","runCodeTest","result","updateArray","index","newArray","prevState","newState","slice","every","el","Num","colorMap","className","children","fileName","_jsxFileName","lineNumber","columnNumber","turns","_c","$RefreshReg$"],"sources":["D:/js projects/Portfolio/React Portfolio/LandingPageReact/mastermind/src/App.js"],"sourcesContent":["import './styles.css';\nimport { useState, useEffect } from 'react';\n\nimport generateCode from './GenerateCode.js';\nimport codeTest from './CodeTest.js';\nimport OutcomeModal from './GameResultsModal';\nimport RoundOutput from './RoundOutput.js';\nimport DragAndDropHandler from './DragDropHandler';\nimport GameControls from './GameControls';\n\nimport circleWhite from './assets/circle-white.png';\nimport circleBlack from './assets/circle-black.png';\nimport circleBlue from './assets/circle-blue.png';\nimport circleRed from './assets/circle-red.png';\nimport circleYellow from './assets/circle-yellow.png';\nimport circleOrange from './assets/circle-orange.png';\nimport circleGreen from './assets/circle-green.png';\nimport circleViolet from './assets/circle-violet.png';\n\nimport circleGrey from './assets/circle-grey.png';\n\n\n\n\nfunction App() {\n\n  const[testResult, setTestResult] = useState(Array(12).fill([\"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\"]))\n\n  const [dragInputCircleOne, setDragInputCircleOne] = useState({ color: circleGrey, value: '' })\n  const [dragInputCircleTwo, setDragInputCircleTwo] = useState({ color: circleGrey, value: '' })\n  const [dragInputCircleThree, setDragInputCircleThree] = useState({ color: circleGrey, value: ''})\n  const [dragInputCircleFour, setDragInputCircleFour] = useState({ color: circleGrey, value: ''})\n\n  const [turnCount, setTurnCount] = useState(0);\n  const [gameStatus, setGameStatus] = useState('');\n  const [secretCode, setSecretCode] =useState([]);\n\n  const { onDragStart, onDragOver, onDrop } = DragAndDropHandler({\n    setDragInputCircleOne,\n    setDragInputCircleTwo,\n    setDragInputCircleThree,\n    setDragInputCircleFour\n  });\n  \n\n  //creates the code to break\n  useEffect(() =>{    \n    setSecretCode(generateCode());;\n\n  },[]);\n\n  console.log(secretCode)\n\n\n\n  //runs the test logic\n  const runCodeTest = () => {\n                    //codeTest is the logic module that determines if the user got it right\n    const result = codeTest([dragInputCircleOne['value'], dragInputCircleTwo['value'], dragInputCircleThree['value'], dragInputCircleFour['value']], secretCode)\n\n    const updateArray = (index, newArray) => {\n      setTestResult(prevState => {\n        const newState = [...prevState];\n        newState[index] = newArray;\n        return newState;\n      });\n    };\n\n    if (result.slice(4).every(el => el === 'H') === true) {\n      // win show modal\n      setGameStatus('Win')\n    }\n    updateArray(turnCount, result)\n\n    //console.log(turnCount)\n    setTurnCount(Num => Num + 1)\n\n    if (turnCount > 12) return setGameStatus('Lose')\n  }\n\n  const colorMap = {\n    'WHT': circleWhite,\n    'BLK': circleBlack,\n    'BLU': circleBlue,\n    'RED': circleRed,\n    'YLW': circleYellow,\n    'ORG': circleOrange,\n    'GRN': circleGreen,\n    'VLT': circleViolet,\n    'GRY': circleGrey,\n    'H': circleBlack,\n    'M': circleWhite,\n    'F': circleGrey\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <p className=\"mastermind-logo\">MASTERMIND</p>\n      </div>\n\n      {/*game outcome Modal*/}\n      <OutcomeModal\n        gameStatus={gameStatus}\n        turns={turnCount}\n        setTurnCount={setTurnCount}\n        setGameStatus={setGameStatus}\n        setTestResult={setTestResult}\n        setDragInputCircleOne={setDragInputCircleOne}\n        setDragInputCircleTwo={setDragInputCircleTwo}\n        setDragInputCircleThree={setDragInputCircleThree}\n        setDragInputCircleFour={setDragInputCircleFour}\n        setSecretCode={setSecretCode}\n      />\n\n      \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}