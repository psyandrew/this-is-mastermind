{"ast":null,"code":"const codeTest = (arr, code) => {\n  let ref;\n  let res = arr;\n  arr = arr.map((el, i) => {\n    if (el === code[i]) {\n      return 'HIT';\n    } else return el;\n  });\n\n  // send when problem is solved \n  if (arr.every(el => el === 'HIT')) return true;\n  //\n\n  ref = code.map((el, i) => {\n    if (arr[i] === 'HIT') {\n      return 'HIT';\n    } else return el;\n  });\n  arr = arr.map(el => {\n    if (el === 'HIT') return el;\n    if (ref.includes(el)) {\n      ref[ref.indexOf(el)] = null;\n      return 'MISS';\n    }\n    ;\n    return 'FAIL';\n  });\n  res = res.concat(arr.sort().reverse());\n  return res;\n};\nconst generateCode = () => {\n  //actual logic\n  /*\n  const codeRef = ['YLW', 'BLU', 'ORG', 'GRN', 'RED', 'VLT', 'BLK', 'WHT']\n   let res =[]\n   for(let i = 0; i < 4 ; i++) {\n    res.push(codeRef[Math.floor(Math.random() * codeRef.length)])\n  }\n   return res\n  */\n\n  //test\n  return ['WHT', 'WHT', 'WHT', 'WHT'];\n};\nexport default generateCode;","map":{"version":3,"names":["codeTest","arr","code","ref","res","map","el","i","every","includes","indexOf","concat","sort","reverse","generateCode"],"sources":["D:/js projects/Portfolio/React Portfolio/LandingPageReact/mastermind/src/GameLogic.js"],"sourcesContent":["  const codeTest = (arr, code) => {\n\n    let ref\n      \n    let res = arr\n\n    arr = arr.map((el, i) => {if (el === code[i]) {return 'HIT' } else return el}) ;\n\n\n    // send when problem is solved \n    if (arr.every(el => el === 'HIT')) return true;\n    //\n\n  \n\n    ref = code.map((el, i) => { if (arr[i] === 'HIT') { return 'HIT'} else return el});\n\n    arr = arr.map((el) => {\n        if (el === 'HIT') return el;\n        if (ref.includes(el)) {\n           ref[ref.indexOf(el)]  = null  \n          return 'MISS'\n        };\n        return 'FAIL';\n        });\n\n    res = res.concat(arr.sort().reverse());\n\n    return res\n\n  }\n\n  const generateCode= () => {\n    //actual logic\n    /*\n    const codeRef = ['YLW', 'BLU', 'ORG', 'GRN', 'RED', 'VLT', 'BLK', 'WHT']\n\n    let res =[]\n\n    for(let i = 0; i < 4 ; i++) {\n      res.push(codeRef[Math.floor(Math.random() * codeRef.length)])\n    }\n\n    return res\n    */\n\n    //test\n    return ['WHT','WHT','WHT','WHT']\n  }\n\n\nexport default generateCode"],"mappings":"AAAE,MAAMA,QAAQ,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EAE9B,IAAIC,GAAG;EAEP,IAAIC,GAAG,GAAGH,GAAG;EAEbA,GAAG,GAAGA,GAAG,CAACI,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;IAAC,IAAID,EAAE,KAAKJ,IAAI,CAACK,CAAC,CAAC,EAAE;MAAC,OAAO,KAAK;IAAC,CAAC,MAAM,OAAOD,EAAE;EAAA,CAAC,CAAC;;EAG9E;EACA,IAAIL,GAAG,CAACO,KAAK,CAACF,EAAE,IAAIA,EAAE,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI;EAC9C;;EAIAH,GAAG,GAAGD,IAAI,CAACG,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;IAAE,IAAIN,GAAG,CAACM,CAAC,CAAC,KAAK,KAAK,EAAE;MAAE,OAAO,KAAK;IAAA,CAAC,MAAM,OAAOD,EAAE;EAAA,CAAC,CAAC;EAElFL,GAAG,GAAGA,GAAG,CAACI,GAAG,CAAEC,EAAE,IAAK;IAClB,IAAIA,EAAE,KAAK,KAAK,EAAE,OAAOA,EAAE;IAC3B,IAAIH,GAAG,CAACM,QAAQ,CAACH,EAAE,CAAC,EAAE;MACnBH,GAAG,CAACA,GAAG,CAACO,OAAO,CAACJ,EAAE,CAAC,CAAC,GAAI,IAAI;MAC7B,OAAO,MAAM;IACf;IAAC;IACD,OAAO,MAAM;EACb,CAAC,CAAC;EAENF,GAAG,GAAGA,GAAG,CAACO,MAAM,CAACV,GAAG,CAACW,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EAEtC,OAAOT,GAAG;AAEZ,CAAC;AAED,MAAMU,YAAY,GAAEA,CAAA,KAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI;EACA,OAAO,CAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAAC;AAClC,CAAC;AAGH,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}