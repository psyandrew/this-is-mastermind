{"ast":null,"code":"var _jsxFileName = \"D:\\\\js projects\\\\Portfolio\\\\React Portfolio\\\\LandingPageReact\\\\mastermind\\\\src\\\\GameResultsModal.js\";\nimport circleGrey from './assets/circle-grey.png';\nimport generateCode from './GenerateCode.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OutcomeModal({\n  gameStatus,\n  turns,\n  setTurnCount,\n  setGameStatus,\n  setTestResult,\n  setDragInputCircleOne,\n  setDragInputCircleTwo,\n  setDragInputCircleThree,\n  setDragInputCircleFour,\n  setSecretCode\n}) {\n  const playAgain = () => {\n    setTurnCount(0);\n    setGameStatus('');\n    setTestResult(Array(12).fill([\"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\"]));\n    setDragInputCircleOne({\n      color: circleGrey,\n      value: ''\n    });\n    setDragInputCircleTwo({\n      color: circleGrey,\n      value: ''\n    });\n    setDragInputCircleThree({\n      color: circleGrey,\n      value: ''\n    });\n    setDragInputCircleFour({\n      color: circleGrey,\n      value: ''\n    });\n    setSecretCode(generateCode());\n  };\n  if (!gameStatus) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outcome-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [gameStatus === 'Win' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You won with \", turns, \" turns!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You lost? lol dumbass.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: playAgain,\n        children: \"Play again?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = OutcomeModal;\nexport default OutcomeModal;\nvar _c;\n$RefreshReg$(_c, \"OutcomeModal\");","map":{"version":3,"names":["circleGrey","generateCode","jsxDEV","_jsxDEV","OutcomeModal","gameStatus","turns","setTurnCount","setGameStatus","setTestResult","setDragInputCircleOne","setDragInputCircleTwo","setDragInputCircleThree","setDragInputCircleFour","setSecretCode","playAgain","Array","fill","color","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/js projects/Portfolio/React Portfolio/LandingPageReact/mastermind/src/GameResultsModal.js"],"sourcesContent":["import circleGrey from './assets/circle-grey.png';\nimport generateCode from './GenerateCode.js';\n\nfunction OutcomeModal({ gameStatus, turns, setTurnCount, setGameStatus, setTestResult, setDragInputCircleOne, setDragInputCircleTwo, setDragInputCircleThree, setDragInputCircleFour, setSecretCode }) {\n  \n\n  const playAgain = () => {\n    setTurnCount(0);\n    setGameStatus('');\n    setTestResult(Array(12).fill([\"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\", \"GRY\"]));\n    setDragInputCircleOne({ color: circleGrey, value: '' });\n    setDragInputCircleTwo({ color: circleGrey, value: '' });\n    setDragInputCircleThree({ color: circleGrey, value: '' });\n    setDragInputCircleFour({ color: circleGrey, value: '' });\n    setSecretCode(generateCode());\n  };\n\n  if (!gameStatus) return null;\n\n  return (\n    <div className=\"outcome-modal\">\n      <div className=\"modal-content\">\n        {gameStatus === 'Win' ? (\n          <p>You won with {turns} turns!</p>\n        ) : (\n          <p>You lost? lol dumbass.</p>\n        )}\n        <button onClick={playAgain}>Play again?</button>\n      </div>\n    </div>\n  );\n}\n\nexport default OutcomeModal;\n"],"mappings":";AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,OAAOC,YAAY,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAC;EAAEC,UAAU;EAAEC,KAAK;EAAEC,YAAY;EAAEC,aAAa;EAAEC,aAAa;EAAEC,qBAAqB;EAAEC,qBAAqB;EAAEC,uBAAuB;EAAEC,sBAAsB;EAAEC;AAAc,CAAC,EAAE;EAGrM,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBR,YAAY,CAAC,CAAC,CAAC;IACfC,aAAa,CAAC,EAAE,CAAC;IACjBC,aAAa,CAACO,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC;IACvFP,qBAAqB,CAAC;MAAEQ,KAAK,EAAElB,UAAU;MAAEmB,KAAK,EAAE;IAAG,CAAC,CAAC;IACvDR,qBAAqB,CAAC;MAAEO,KAAK,EAAElB,UAAU;MAAEmB,KAAK,EAAE;IAAG,CAAC,CAAC;IACvDP,uBAAuB,CAAC;MAAEM,KAAK,EAAElB,UAAU;MAAEmB,KAAK,EAAE;IAAG,CAAC,CAAC;IACzDN,sBAAsB,CAAC;MAAEK,KAAK,EAAElB,UAAU;MAAEmB,KAAK,EAAE;IAAG,CAAC,CAAC;IACxDL,aAAa,CAACb,YAAY,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,IAAI,CAACI,UAAU,EAAE,OAAO,IAAI;EAE5B,oBACEF,OAAA;IAAKiB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BlB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BhB,UAAU,KAAK,KAAK,gBACnBF,OAAA;QAAAkB,QAAA,GAAG,eAAa,EAACf,KAAK,EAAC,SAAO;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAElCtB,OAAA;QAAAkB,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC7B,eACDtB,OAAA;QAAQuB,OAAO,EAAEX,SAAU;QAAAM,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACE,EAAA,GA5BQvB,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}