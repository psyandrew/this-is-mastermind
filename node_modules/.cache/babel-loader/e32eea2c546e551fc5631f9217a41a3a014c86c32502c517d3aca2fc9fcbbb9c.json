{"ast":null,"code":"const codeTest = (arr, code) => {\n  let ref;\n  let res = arr;\n  arr = arr.map((el, i) => {\n    if (el === code[i]) {\n      return 'H';\n    } else return el;\n  });\n\n  // send when problem is solved \n  if (arr.every(el => el === 'H')) return res.concat(arr);\n  //\n\n  ref = code.map((el, i) => {\n    if (arr[i] === 'H') {\n      return 'H';\n    } else return el;\n  });\n  arr = arr.map(el => {\n    if (el === 'H') return el;\n    if (ref.includes(el)) {\n      ref[ref.indexOf(el)] = null;\n      return 'M';\n    }\n    ;\n    return 'F';\n  });\n  res = res.concat(arr.sort().reverse());\n  return res;\n};\nexport default codeTest;","map":{"version":3,"names":["codeTest","arr","code","ref","res","map","el","i","every","concat","includes","indexOf","sort","reverse"],"sources":["D:/Portfolio/Mastermind/src/CodeTest.js"],"sourcesContent":["  const codeTest = (arr, code) => {\n\n    let ref\n      \n    let res = arr\n\n    arr = arr.map((el, i) => {if (el === code[i]) {return 'H' } else return el}) ;\n\n\n    // send when problem is solved \n    if (arr.every(el => el === 'H')) return res.concat(arr)\n    //\n\n  \n\n    ref = code.map((el, i) => { if (arr[i] === 'H') { return 'H'} else return el});\n\n    arr = arr.map((el) => {\n        if (el === 'H') return el;\n        if (ref.includes(el)) {\n           ref[ref.indexOf(el)]  = null  \n          return 'M'\n        };\n        return 'F';\n        });\n\n    res = res.concat(arr.sort().reverse());\n\n    return res\n\n  }\n\n\nexport default codeTest"],"mappings":"AAAE,MAAMA,QAAQ,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EAE9B,IAAIC,GAAG;EAEP,IAAIC,GAAG,GAAGH,GAAG;EAEbA,GAAG,GAAGA,GAAG,CAACI,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;IAAC,IAAID,EAAE,KAAKJ,IAAI,CAACK,CAAC,CAAC,EAAE;MAAC,OAAO,GAAG;IAAC,CAAC,MAAM,OAAOD,EAAE;EAAA,CAAC,CAAC;;EAG5E;EACA,IAAIL,GAAG,CAACO,KAAK,CAACF,EAAE,IAAIA,EAAE,KAAK,GAAG,CAAC,EAAE,OAAOF,GAAG,CAACK,MAAM,CAACR,GAAG,CAAC;EACvD;;EAIAE,GAAG,GAAGD,IAAI,CAACG,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;IAAE,IAAIN,GAAG,CAACM,CAAC,CAAC,KAAK,GAAG,EAAE;MAAE,OAAO,GAAG;IAAA,CAAC,MAAM,OAAOD,EAAE;EAAA,CAAC,CAAC;EAE9EL,GAAG,GAAGA,GAAG,CAACI,GAAG,CAAEC,EAAE,IAAK;IAClB,IAAIA,EAAE,KAAK,GAAG,EAAE,OAAOA,EAAE;IACzB,IAAIH,GAAG,CAACO,QAAQ,CAACJ,EAAE,CAAC,EAAE;MACnBH,GAAG,CAACA,GAAG,CAACQ,OAAO,CAACL,EAAE,CAAC,CAAC,GAAI,IAAI;MAC7B,OAAO,GAAG;IACZ;IAAC;IACD,OAAO,GAAG;EACV,CAAC,CAAC;EAENF,GAAG,GAAGA,GAAG,CAACK,MAAM,CAACR,GAAG,CAACW,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EAEtC,OAAOT,GAAG;AAEZ,CAAC;AAGH,eAAeJ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}